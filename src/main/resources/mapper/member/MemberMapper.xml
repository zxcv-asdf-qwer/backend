<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.kr.compig.api.domain.member.MemberMapper">

    <select id="selectMemberList" resultType="Member" parameterType="MemberSearchRequest">
        SELECT mm.member_id as id
        FROM member mm
        <where>
            <if test='userType != null'>
                AND user_type IN
                <foreach collection="userType" item="item" separator="," close=")" open="(">
                    #{item.code}
                </foreach>
            </if>
            <if test="userNm != null and userNm != ''">
                AND user_nm LIKE '%' || #{userNm} || '%'
            </if>
            <if test="telNo != null and telNo != ''">
                AND tel_no LIKE '%' || #{telNo} || '%'
            </if>
            <if test="fromCreatedOn != null and toCreatedOn != null">
                AND created_on BETWEEN #{fromCreatedOn} AND #{toCreatedOn}
            </if>
        </where>
    </select>

    <select id="selectGuardianList" resultType="GuardianMemberResponse" parameterType="MemberSearchRequest">
        SELECT mm.member_id as memberId,
        mm.user_nm as userNm,
        mm.tel_no as telNo,
        mm.user_id as userId,
        mm.user_pw as userPw,
        mm.email,
        mm.gender,
        mm.use_yn as useYn,
        mm.user_type as userType,
        mm.dept_code as deptCode,
        mm.member_register_type as memberRegisterType,
        mm.jumin1 as jumin1,
        mm.jumin2 as jumin2,
        mm.address1,
        mm.address2,
        mm.picture,
        mm.domestic_foreign_code as domesticForeignCode,
        mm.career_code as careerCode,
        mm.care_start_year,
        mm.introduce,
        mm.marketing_email_date as marketingEmailDate,
        mm.marketing_app_push_date as marketingAppPushDate,
        mm.marketing_kakao_date as marketingKakaoDate,
        mm.marketing_sms_date as marketingSmsDate,
        mm.leave_reason,
        mm.leave_date,
        mm.real_name_yn as realNameYn,
        mm.di,
        mm.ci,
        mm.recent_login_date,
        mm.ip_address as ipAddress,
        (select m.user_nm from member m where m.member_id = mm.CREATED_BY) AS createdBy,
        (select m.user_nm from member m where m.member_id = mm.UPDATED_BY) AS updatedBy,
        mm.CREATED_ON AS createdOn,
        mm.UPDATED_ON AS updatedOn,
        'MEMBER' AS memberType
        FROM member mm
        <where>
           AND mm.user_type = 'GUARDIAN'
            <if test="userNm != null and userNm != ''">
                AND user_nm LIKE '%' || #{userNm} || '%'
            </if>
            <if test="telNo != null and telNo != ''">
                AND tel_no LIKE '%' || #{telNo} || '%'
            </if>
            <if test="fromCreatedOn != null and toCreatedOn != null">
                AND created_on BETWEEN #{fromCreatedOn} AND #{toCreatedOn}
            </if>
        </where>
        UNION ALL
        SELECT CAST(nm.no_member_id AS VARCHAR) as memberId,
        nm.user_nm as userNm,
        nm.tel_no as telNo,
        null as userId,
        null as userPw,
        null as email,
        null as gender,
        null as useYn,
        null as userType,
        null as deptCode,
        null as memberRegisterType,
        null as jumin1,
        null as jumin2,
        null as address1,
        null as address2,
        null as picture,
        null as domesticForeignCode,
        null as careerCode,
        null as careStartYear,
        null as introduce,
        null as marketingEmailDate,
        null as marketingAppPushDate,
        null as marketingKakaoDate,
        null as marketingSmsDate,
        null as leaveReason,
        null as leaveDate,
        null as realNameYn,
        null as di,
        null as ci,
        null as recentLoginDate,
        null as ipAddress,
        (select m.user_nm from member m where m.member_id = nm.CREATED_BY) AS createdBy,
        (select m.user_nm from member m where m.member_id = nm.UPDATED_BY) AS updatedBy,
        nm.CREATED_ON AS createdOn,
        nm.UPDATED_ON AS updatedOn,
        'NO_MEMBER' AS memberType
        FROM no_member nm
        <where>
            <if test="userNm != null and userNm != ''">
                AND user_nm LIKE '%' || #{userNm} || '%'
            </if>
            <if test="telNo != null and telNo != ''">
                  AND tel_no LIKE '%' || #{telNo} || '%'
            </if>
            <if test="fromCreatedOn != null and toCreatedOn != null">
                AND created_on BETWEEN #{fromCreatedOn} AND #{toCreatedOn}
            </if>
        </where>
    </select>

</mapper>
